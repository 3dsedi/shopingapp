{"version":3,"file":"app.js","sourceRoot":"","sources":["../../src/app.ts"],"names":[],"mappings":";;;;;AAAA,sDAA8B;AAG9B,0EAA4C;AAE5C,MAAM,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAA;AACzC,MAAM,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAE5B,MAAM,QAAQ,GAAe,uBAAQ,CAAA;AAGtC,MAAM,GAAG,GAAgB,IAAA,iBAAO,GAAE,CAAC;AACnC,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAA;AAC1B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAA;AAEnD,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC;IACX,MAAM,EAAE,uBAAuB;IAC/B,OAAO,EAAE,CAAC,KAAK,EAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,EAAC,KAAK,EAAC,OAAO,CAAC;IACvD,cAAc,EAAE,CAAC,cAAc,EAAE;CAClC,CAAC,CAAC,CAAC;AAEJ,GAAG,CAAC,GAAG,CAAC,eAAe,EAAC,IAAI,EAAE,EAAE,CAAC,IAAa,EAAE,GAAa,EAAE,EAAE;IAC/D,OAAO,GAAG;SACT,MAAM,CAAC,GAAG,CAAC;SACX,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC;AAEH,yEAAyE;AACzE,uDAAuD;AACvD,yEAAyE;AACzE,2BAA2B;AAC3B,wCAAwC;AACxC,MAAM;AACN,0CAA0C;AAC1C,qDAAqD;AACrD,MAAM;AAEN,sEAAsE;AACtE,mDAAmD;AACnD,0EAA0E;AAC1E,4BAA4B;AAC5B,iFAAiF;AACjF,MAAM;AAEN,yEAAyE;AAEzE,yDAAyD;AACzD,8DAA8D;AAC9D,mEAAmE;AACnE,wEAAwE;AACxE,sDAAsD;AAGtD,wEAAwE;AACxE,4BAA4B;AAC5B,0CAA0C;AAC1C,MAAM;AACN,wFAAwF;AAExF,mFAAmF;AACnF,MAAM;AAGN,4EAA4E;AAE5E,yDAAyD;AAEzD,wEAAwE;AACxE,4BAA4B;AAC5B,0CAA0C;AAC1C,MAAM;AACN,iCAAiC;AAEjC,sDAAsD;AACtD,MAAM;AAEN,kBAAe,GAAG,CAAC","sourcesContent":["import express from 'express';\r\nimport { Request, Response, Application } from 'express';\r\nimport { Product } from './models/Product';\r\nimport MilkData from '../data/MilkData.json'\r\n\r\nconst bodyParser = require('body-parser')\r\nconst cors = require('cors');\r\n\r\n const PRODUCTS : Product[] = MilkData\r\n\r\n\r\nconst app: Application = express();\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\napp.use(cors({\r\n  origin: 'http://localhost:3000',\r\n  methods: ['GET','POST','DELETE','UPDATE','PUT','PATCH'],\r\n  allowedHeaders: ['Content-Type',],\r\n}));\r\n\r\napp.get('/api/products',cors(), (_req: Request, res: Response) => {\r\n  return res\r\n  .status(200)\r\n  .json({ PRODUCTS: PRODUCTS });\r\n});\r\n\r\n// app.get('/api/puppies/:id',cors(), (_req: Request, res: Response) => {\r\n//   const puppyId = +((_req.params as {id:string}).id)\r\n//   const puppyIndex = PUPPIES.findIndex(puppy => puppy.id === puppyId) \r\n//   if(puppyIndex === -1){\r\n//     throw new Error ('puppy missing')\r\n//   }\r\n//   const puppyInfo = PUPPIES[puppyIndex]\r\n//   return res.status(200).json({puppy : puppyInfo})\r\n// });\r\n\r\n// app.post('/api/puppies',cors(), (_req: Request, res: Response) => {\r\n//   const {name,breed,birthDate, img} = _req.body;\r\n//   const newPuppy = new Puppy (Date.now(), breed, name, birthDate, img);\r\n//   PUPPIES.push(newPuppy);\r\n//   return res.status(201).json({message: 'new puppy added' , puppies: PUPPIES})\r\n// });\r\n\r\n// app.put('/api/puppies/:id',cors(), (_req: Request, res: Response) => {\r\n\r\n//   const puppyId = +((_req.params as {id: string}).id);\r\n//   const updatedName = (_req.body as { name: string }).name;\r\n//     const updatedBreed = (_req.body as { breed: string }).breed;\r\n//     const updatedBd = (_req.body as { birthDate: string }).birthDate;\r\n//     const img = (_req.body as { img: string }).img;\r\n\r\n\r\n//   const puppyIndex = PUPPIES.findIndex(puppy=> puppy.id === puppyId);\r\n//   if (puppyIndex === -1){\r\n//     throw new Error ('puppy not found')\r\n//   }\r\n//   PUPPIES[puppyIndex] = new Puppy(puppyId, updatedBreed, updatedName,updatedBd, img);\r\n\r\n//   res.status(200).json({message: ' updated' , updatePuppy: PUPPIES[puppyIndex]})\r\n// });\r\n\r\n\r\n// app.delete('/api/puppies/:id',cors(), (_req: Request, res: Response) => {\r\n\r\n//   const puppyId = +((_req.params as {id: string}).id);\r\n\r\n//   const puppyIndex = PUPPIES.findIndex(puppy=> puppy.id === puppyId);\r\n//   if (puppyIndex === -1){\r\n//     throw new Error ('puppy not found')\r\n//   }\r\n//  PUPPIES.splice(puppyIndex, 1)\r\n\r\n//   res.status(200).json({message: ' puppy deleted'})\r\n// });\r\n\r\nexport default app;"]}